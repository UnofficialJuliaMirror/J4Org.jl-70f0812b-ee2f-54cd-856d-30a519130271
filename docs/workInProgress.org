#+SETUPFILE: Setup/setupFile.org
#+TITLE: Work in Progress

* Project Journal
* Project TODO
** TODO [10/16]
- [ ] add a function to show link and targets & detect useless link_target
- [ ] search for "export" keyword to annotate documented item 
- [X] even if complete_link = false, search for target in order to do pretty print (information like struct etc...)
- [X] use extracted tag in DocumentedItem
- [X] allows tag list "#+tag1, tag2"
- [X] add prefix to extra link: <<link>> -> <<prefix_link>>
- [X] finish parsing and code cleaning 
- [ ] add an option to extract code body
- [ ] :RESULT: bug
- [X] fix ugly PDF link 
- [X] detect constructor
- [X] for the index, lexico sort: l = L (sort not sensitive to capital)
- [ ] support for "@macro function() ... end"
- [X] support for "macro a_macro"
- [X] support for alias/variable "const alias = something"
- [ ] add procedure to generate doc without =ob-julia.el=  installed
* Change logs
** v0.1.0 -> v0.2.0
- to support [[https://github.com/QBobWatson/poporg/blob/master/poporg.el][poporg]] (also see [[https://github.com/QBobWatson/poporg][QBobWatson/poporg]]) for comment editing, comment syntax is extended: 
  - "# \plus" is processed as "#\plus"
  - "# !" is processed as "#!"
  one possible risk is than you must avoid line starting with "!"

  You can install poporg from MELPA. Configuration is:
  #+BEGIN_EXAMPLE
  (autoload 'poporg-dwim "poporg" nil t)
  (global-set-key (kbd "C-c \"") 'poporg-dwim)
  #+END_EXAMPLE
- add support for =@enum=
- magnified link name if link target is present
- complete refactoring of link engine
- add support for variables
- add support for macros
* W3 Links

